PInvoke.AdvApi32
PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ADMIN_PIN = 31 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_APPLI_CERT = 18 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_CERTCHAIN = 9 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_CHANGE_PASSWORD = 7 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_CONTAINER = 6 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_CRYPT_COUNT_KEY_USE = 41 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ENUMALGS = 1 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ENUMALGS_EX = 22 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ENUMCONTAINERS = 2 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ENUMELECTROOTS = 26 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ENUMEX_SIGNING_PROT = 40 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ENUMMANDROOTS = 25 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_IMPTYPE = 3 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEYEXCHANGE_PIN = 32 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEYSET_SEC_DESCR = 8 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEYSET_TYPE = 27 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEYSPEC = 39 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEYSTORAGE = 17 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEYX_KEYSIZE_INC = 35 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_KEY_TYPE_SUBTYPE = 10 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_NAME = 4 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_PROVTYPE = 16 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_ROOT_CERTSTORE = 46 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SESSION_KEYSIZE = 20 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SGC_INFO = 37 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SIGNATURE_PIN = 33 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SIG_KEYSIZE_INC = 34 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SMARTCARD_GUID = 45 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SMARTCARD_READER = 43 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_SYM_KEYSIZE = 19 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_UI_PROMPT = 21 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_UNIQUE_CONTAINER = 36 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_USER_CERTSTORE = 42 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_USE_HARDWARE_RNG = 38 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptGetProvParamQuery.PP_VERSION = 5 -> PInvoke.AdvApi32.CryptGetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_CLIENT_HWND = 1 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_DELETEKEY = 24 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_KEYEXCHANGE_PIN = 32 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_KEYSET_SEC_DESCR = 8 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_PIN_PROMPT_STRING = 44 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_ROOT_CERTSTORE = 46 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_SECURE_KEYEXCHANGE_PIN = 47 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_SECURE_SIGNATURE_PIN = 48 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_SIGNATURE_PIN = 33 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_SMARTCARD_GUID = 45 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_SMARTCARD_READER = 43 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_UI_PROMPT = 21 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_USER_CERTSTORE = 42 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.CryptSetProvParamQuery.PP_USE_HARDWARE_RNG = 38 -> PInvoke.AdvApi32.CryptSetProvParamQuery
PInvoke.AdvApi32.ENUM_SERVICE_STATUS
PInvoke.AdvApi32.ENUM_SERVICE_STATUS.ENUM_SERVICE_STATUS() -> void
PInvoke.AdvApi32.ENUM_SERVICE_STATUS.ServiceStatus -> PInvoke.AdvApi32.SERVICE_STATUS
PInvoke.AdvApi32.ENUM_SERVICE_STATUS.lpDisplayName -> string
PInvoke.AdvApi32.ENUM_SERVICE_STATUS.lpServiceName -> string
PInvoke.AdvApi32.LPHANDLER_FUNCTION
PInvoke.AdvApi32.LPHANDLER_FUNCTION_EX
PInvoke.AdvApi32.RegNotifyFilter
PInvoke.AdvApi32.RegNotifyFilter.REG_NOTIFY_CHANGE_ATTRIBUTES = 2 -> PInvoke.AdvApi32.RegNotifyFilter
PInvoke.AdvApi32.RegNotifyFilter.REG_NOTIFY_CHANGE_LAST_SET = 4 -> PInvoke.AdvApi32.RegNotifyFilter
PInvoke.AdvApi32.RegNotifyFilter.REG_NOTIFY_CHANGE_NAME = 1 -> PInvoke.AdvApi32.RegNotifyFilter
PInvoke.AdvApi32.RegNotifyFilter.REG_NOTIFY_CHANGE_SECURITY = 8 -> PInvoke.AdvApi32.RegNotifyFilter
PInvoke.AdvApi32.RegNotifyFilter.REG_NOTIFY_THREAD_AGNOSTIC = 268435456 -> PInvoke.AdvApi32.RegNotifyFilter
PInvoke.AdvApi32.RegOpenKeyOptions
PInvoke.AdvApi32.RegOpenKeyOptions.None = 0 -> PInvoke.AdvApi32.RegOpenKeyOptions
PInvoke.AdvApi32.RegOpenKeyOptions.REG_OPTION_OPEN_LINK = 8 -> PInvoke.AdvApi32.RegOpenKeyOptions
PInvoke.AdvApi32.SC_STATUS_TYPE
PInvoke.AdvApi32.SC_STATUS_TYPE.SC_STATUS_PROCESS_INFO = 0 -> PInvoke.AdvApi32.SC_STATUS_TYPE
PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.ATTRIBUTE_SECURITY_INFORMATION = 32 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.BACKUP_SECURITY_INFORMATION = 65536 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.DACL_SECURITY_INFORMATION = 4 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.GROUP_SECURITY_INFORMATION = 2 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.LABEL_SECURITY_INFORMATION = 16 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.OWNER_SECURITY_INFORMATION = 1 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.PROCESS_TRUST_LABEL_SECURITY_INFORMATION = 128 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.PROTECTED_DACL_SECURITY_INFORMATION = 2147483648 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.PROTECTED_SACL_SECURITY_INFORMATION = 1073741824 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.SACL_SECURITY_INFORMATION = 8 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.SCOPE_SECURITY_INFORMATION = 64 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.UNPROTECTED_DACL_SECURITY_INFORMATION = 536870912 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SECURITY_INFORMATION.UNPROTECTED_SACL_SECURITY_INFORMATION = 268435456 -> PInvoke.AdvApi32.SECURITY_INFORMATION
PInvoke.AdvApi32.SERVICE_STATUS
PInvoke.AdvApi32.SERVICE_STATUS.SERVICE_STATUS() -> void
PInvoke.AdvApi32.SERVICE_STATUS.dwCheckPoint -> int
PInvoke.AdvApi32.SERVICE_STATUS.dwControlsAccepted -> int
PInvoke.AdvApi32.SERVICE_STATUS.dwCurrentState -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.SERVICE_STATUS.dwServiceSpecificExitCode -> int
PInvoke.AdvApi32.SERVICE_STATUS.dwServiceType -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.SERVICE_STATUS.dwWaitHint -> int
PInvoke.AdvApi32.SERVICE_STATUS.dwWin32ExitCode -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.SERVICE_STATUS_PROCESS() -> void
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwCheckPoint -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwControlsAccepted -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwCurrentState -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwProcessId -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwServiceFlags -> PInvoke.AdvApi32.SERVICE_STATUS_PROCESS_Flags
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwServiceSpecificExitCode -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwServiceType -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwWaitHint -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS.dwWin32ExitCode -> int
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS_Flags
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS_Flags.None = 0 -> PInvoke.AdvApi32.SERVICE_STATUS_PROCESS_Flags
PInvoke.AdvApi32.SERVICE_STATUS_PROCESS_Flags.SERVICE_RUNS_IN_SYSTEM_PROCESS = 1 -> PInvoke.AdvApi32.SERVICE_STATUS_PROCESS_Flags
PInvoke.AdvApi32.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
PInvoke.AdvApi32.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM() -> void
PInvoke.AdvApi32.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM.cbData -> int
PInvoke.AdvApi32.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM.dwDataType -> PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM.pData -> System.IntPtr
PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_DS_OBJECT = 8 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_DS_OBJECT_ALL = 9 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_FILE_OBJECT = 1 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_KERNEL_OBJECT = 6 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_LMSHARE = 5 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_PRINTER = 3 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_PROVIDER_DEFINED_OBJECT = 10 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_REGISTRY_KEY = 4 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_REGISTRY_WOW64_32KEY = 12 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_SERVICE = 2 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_UNKNOWN_OBJECT_TYPE = 0 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_WINDOW_OBJECT = 7 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SE_OBJECT_TYPE.SE_WMIGUID_OBJECT = 11 -> PInvoke.AdvApi32.SE_OBJECT_TYPE
PInvoke.AdvApi32.SafeCryptographicProviderHandle
PInvoke.AdvApi32.SafeCryptographicProviderHandle.SafeCryptographicProviderHandle() -> void
PInvoke.AdvApi32.SafeCryptographicProviderHandle.SafeCryptographicProviderHandle(System.IntPtr preexistingHandle, bool ownsHandle = true) -> void
PInvoke.AdvApi32.SafeServiceHandle
PInvoke.AdvApi32.SafeServiceHandle.SafeServiceHandle() -> void
PInvoke.AdvApi32.SafeServiceHandle.SafeServiceHandle(System.IntPtr preexistingHandle, bool ownsHandle = true) -> void
PInvoke.AdvApi32.ServiceAccess
PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_CONTINUE = 3 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_DEVICEEVENT = 11 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_HARDWAREPROFILECHANGE = 12 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_INTERROGATE = 4 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_NETBINDADD = 7 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_NETBINDDISABLE = 10 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_NETBINDENABLE = 9 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_NETBINDREMOVE = 8 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_PARAMCHANGE = 6 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_PAUSE = 2 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_POWEREVENT = 13 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_PRESHUTDOWN = 15 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_SESSIONCHANGE = 14 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_SHUTDOWN = 5 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_STOP = 1 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_TIMECHANGE = 16 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_TRIGGEREVENT = 32 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.ServiceControl.SERVICE_CONTROL_USERMODEREBOOT = 64 -> PInvoke.AdvApi32.ServiceControl
PInvoke.AdvApi32.SC_ACTION
PInvoke.AdvApi32.SC_ACTION.Delay -> uint
PInvoke.AdvApi32.SC_ACTION.SC_ACTION() -> void
PInvoke.AdvApi32.SC_ACTION.Type -> PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.SC_ACTION_TYPE.SC_ACTION_NONE = 0 -> PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.SC_ACTION_TYPE.SC_ACTION_REBOOT = 2 -> PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.SC_ACTION_TYPE.SC_ACTION_RESTART = 1 -> PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.SC_ACTION_TYPE.SC_ACTION_RUN_COMMAND = 3 -> PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.ServiceDelayedAutoStartInfo
PInvoke.AdvApi32.ServiceDelayedAutoStartInfo.ServiceDelayedAutoStartInfo() -> void
PInvoke.AdvApi32.ServiceDelayedAutoStartInfo.fDelayedAutostart -> bool
PInvoke.AdvApi32.ServiceDescription
PInvoke.AdvApi32.ServiceDescription.ServiceDescription() -> void
PInvoke.AdvApi32.ServiceDescription.lpDescription -> string
PInvoke.AdvApi32.ServiceErrorControl
PInvoke.AdvApi32.ServiceErrorControl.SERVICE_ERROR_CRITICAL = 3 -> PInvoke.AdvApi32.ServiceErrorControl
PInvoke.AdvApi32.ServiceErrorControl.SERVICE_ERROR_IGNORE = 0 -> PInvoke.AdvApi32.ServiceErrorControl
PInvoke.AdvApi32.ServiceErrorControl.SERVICE_ERROR_NORMAL = 1 -> PInvoke.AdvApi32.ServiceErrorControl
PInvoke.AdvApi32.ServiceErrorControl.SERVICE_ERROR_SEVERE = 2 -> PInvoke.AdvApi32.ServiceErrorControl
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.SERVICE_FAILURE_ACTIONS() -> void
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.cActions -> int
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.dwResetPeriod -> int
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpCommand -> char*
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpRebootMsg -> char*
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpsaActions -> PInvoke.AdvApi32.SC_ACTION*
PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_DELAYED_AUTO_START_INFO = 3 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_DESCRIPTION = 1 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_FAILURE_ACTIONS = 2 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_FAILURE_ACTIONS_FLAG = 4 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_LAUNCH_PROTECTED = 12 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_PREFERRED_NODE = 9 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_PRESHUTDOWN_INFO = 7 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO = 6 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_SERVICE_SID_INFO = 5 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceInfoLevel.SERVICE_CONFIG_TRIGGER_INFO = 8 -> PInvoke.AdvApi32.ServiceInfoLevel
PInvoke.AdvApi32.ServiceLaunchProtected
PInvoke.AdvApi32.ServiceLaunchProtected.SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT = 3 -> PInvoke.AdvApi32.ServiceLaunchProtected
PInvoke.AdvApi32.ServiceLaunchProtected.SERVICE_LAUNCH_PROTECTED_NONE = 0 -> PInvoke.AdvApi32.ServiceLaunchProtected
PInvoke.AdvApi32.ServiceLaunchProtected.SERVICE_LAUNCH_PROTECTED_WINDOWS = 1 -> PInvoke.AdvApi32.ServiceLaunchProtected
PInvoke.AdvApi32.ServiceLaunchProtected.SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT = 2 -> PInvoke.AdvApi32.ServiceLaunchProtected
PInvoke.AdvApi32.ServiceLaunchProtectedInfo
PInvoke.AdvApi32.ServiceLaunchProtectedInfo.ServiceLaunchProtectedInfo() -> void
PInvoke.AdvApi32.ServiceLaunchProtectedInfo.dwPreshutdownTimeout -> PInvoke.AdvApi32.ServiceLaunchProtected
PInvoke.AdvApi32.ServiceManagerAccess
PInvoke.AdvApi32.ServicePreferredNodeInfo
PInvoke.AdvApi32.ServicePreferredNodeInfo.ServicePreferredNodeInfo() -> void
PInvoke.AdvApi32.ServicePreferredNodeInfo.fDelete -> bool
PInvoke.AdvApi32.ServicePreferredNodeInfo.usPreferredNode -> uint
PInvoke.AdvApi32.ServicePreshutdownInfo
PInvoke.AdvApi32.ServicePreshutdownInfo.ServicePreshutdownInfo() -> void
PInvoke.AdvApi32.ServicePreshutdownInfo.dwPreshutdownTimeout -> int
PInvoke.AdvApi32.ServiceRequiredPrivilegesInfo
PInvoke.AdvApi32.ServiceRequiredPrivilegesInfo.ServiceRequiredPrivilegesInfo() -> void
PInvoke.AdvApi32.ServiceRequiredPrivilegesInfo.pmszRequiredPrivileges -> string
PInvoke.AdvApi32.ServiceSidInfo
PInvoke.AdvApi32.ServiceSidInfo.ServiceSidInfo() -> void
PInvoke.AdvApi32.ServiceSidInfo.dwServiceSidType -> PInvoke.AdvApi32.ServiceSidType
PInvoke.AdvApi32.ServiceSidType
PInvoke.AdvApi32.ServiceSidType.SERVICE_SID_TYPE_NONE = 0 -> PInvoke.AdvApi32.ServiceSidType
PInvoke.AdvApi32.ServiceSidType.SERVICE_SID_TYPE_RESTRICTED = 3 -> PInvoke.AdvApi32.ServiceSidType
PInvoke.AdvApi32.ServiceSidType.SERVICE_SID_TYPE_UNRESTRICTED = 1 -> PInvoke.AdvApi32.ServiceSidType
PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceStartType.SERVICE_AUTO_START = 2 -> PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceStartType.SERVICE_BOOT_START = 0 -> PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceStartType.SERVICE_DEMAND_START = 3 -> PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceStartType.SERVICE_DISABLED = 4 -> PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceStartType.SERVICE_SYSTEM_START = 1 -> PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_CONTINUE_PENDING = 5 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_PAUSED = 7 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_PAUSE_PENDING = 6 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_RUNNING = 4 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_START_PENDING = 2 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_STOPPED = 1 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceState.SERVICE_STOP_PENDING = 3 -> PInvoke.AdvApi32.ServiceState
PInvoke.AdvApi32.ServiceStateQuery
PInvoke.AdvApi32.ServiceStateQuery.SERVICE_ACTIVE = 1 -> PInvoke.AdvApi32.ServiceStateQuery
PInvoke.AdvApi32.ServiceStateQuery.SERVICE_INACTIVE = 2 -> PInvoke.AdvApi32.ServiceStateQuery
PInvoke.AdvApi32.ServiceStateQuery.SERVICE_STATE_ALL = PInvoke.AdvApi32.ServiceStateQuery.SERVICE_ACTIVE | PInvoke.AdvApi32.ServiceStateQuery.SERVICE_INACTIVE -> PInvoke.AdvApi32.ServiceStateQuery
PInvoke.AdvApi32.ServiceTrigger
PInvoke.AdvApi32.ServiceTrigger.ServiceTrigger() -> void
PInvoke.AdvApi32.ServiceTrigger.cDataItems -> int
PInvoke.AdvApi32.ServiceTrigger.dwAction -> PInvoke.AdvApi32.ServiceTriggerAction
PInvoke.AdvApi32.ServiceTrigger.dwTriggerType -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTrigger.pDataItems -> PInvoke.AdvApi32.SERVICE_TRIGGER_SPECIFIC_DATA_ITEM[]
PInvoke.AdvApi32.ServiceTrigger.pTriggerSubtype -> System.IntPtr
PInvoke.AdvApi32.ServiceTriggerAction
PInvoke.AdvApi32.ServiceTriggerAction.SERVICE_TRIGGER_ACTION_SERVICE_START = 1 -> PInvoke.AdvApi32.ServiceTriggerAction
PInvoke.AdvApi32.ServiceTriggerAction.SERVICE_TRIGGER_ACTION_SERVICE_STOP = 2 -> PInvoke.AdvApi32.ServiceTriggerAction
PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.ServiceTriggerDataType.SERVICE_TRIGGER_DATA_TYPE_BINARY = 1 -> PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.ServiceTriggerDataType.SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL = 5 -> PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.ServiceTriggerDataType.SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY = 4 -> PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.ServiceTriggerDataType.SERVICE_TRIGGER_DATA_TYPE_LEVEL = 3 -> PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.ServiceTriggerDataType.SERVICE_TRIGGER_DATA_TYPE_STRING = 2 -> PInvoke.AdvApi32.ServiceTriggerDataType
PInvoke.AdvApi32.ServiceTriggerInfo
PInvoke.AdvApi32.ServiceTriggerInfo.ServiceTriggerInfo() -> void
PInvoke.AdvApi32.ServiceTriggerInfo.cTriggers -> int
PInvoke.AdvApi32.ServiceTriggerInfo.pReserved -> System.IntPtr
PInvoke.AdvApi32.ServiceTriggerInfo.pTriggers -> PInvoke.AdvApi32.ServiceTrigger[]
PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_CUSTOM = 20 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL = 1 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_DOMAIN_JOIN = 3 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT = 4 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_GROUP_POLICY = 5 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY = 2 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceTriggerType.SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT = 6 -> PInvoke.AdvApi32.ServiceTriggerType
PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_ADAPTER = 4 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_DRIVER = PInvoke.AdvApi32.ServiceType.SERVICE_KERNEL_DRIVER | PInvoke.AdvApi32.ServiceType.SERVICE_FILE_SYSTEM_DRIVER -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_FILE_SYSTEM_DRIVER = 2 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_INTERACTIVE_PROCESS = 256 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_KERNEL_DRIVER = 1 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_RECOGNIZER_DRIVER = 8 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_WIN32 = PInvoke.AdvApi32.ServiceType.SERVICE_WIN32_OWN_PROCESS | PInvoke.AdvApi32.ServiceType.SERVICE_WIN32_SHARE_PROCESS -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_WIN32_OWN_PROCESS = 16 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ServiceType.SERVICE_WIN32_SHARE_PROCESS = 32 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE
PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE.TokenElevationTypeDefault = 1 -> PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE
PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE.TokenElevationTypeFull = 2 -> PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE
PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE.TokenElevationTypeLimited = 3 -> PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.MaxTokenInfoClass = 41 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenAccessInformation = 22 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenAppContainerNumber = 32 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenAppContainerSid = 31 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenAuditPolicy = 16 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenCapabilities = 30 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenDefaultDacl = 6 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenDeviceClaimAttributes = 34 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenDeviceGroups = 37 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenElevation = 20 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenElevationType = 18 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenGroups = 2 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenGroupsAndPrivileges = 13 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenHasRestrictions = 21 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenImpersonationLevel = 9 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenIntegrityLevel = 25 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenIsAppContainer = 29 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenIsRestricted = 40 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenLinkedToken = 19 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenLogonSid = 28 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenMandatoryPolicy = 27 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenOrigin = 17 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenOwner = 4 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenPrimaryGroup = 5 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenPrivileges = 3 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenRestrictedDeviceClaimAttributes = 36 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenRestrictedDeviceGroups = 38 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenRestrictedSids = 11 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenRestrictedUserClaimAttributes = 35 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenSandBoxInert = 15 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenSecurityAttributes = 39 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenSessionId = 12 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenSessionReference = 14 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenSource = 7 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenStatistics = 10 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenType = 8 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenUiAccess = 26 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenUser = 1 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenUserClaimAttributes = 33 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenVirtualizationAllowed = 23 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS.TokenVirtualizationEnabled = 24 -> PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS
PInvoke.AdvApi32.TOKEN_TYPE
PInvoke.AdvApi32.TOKEN_TYPE.TokenImpersonation = 2 -> PInvoke.AdvApi32.TOKEN_TYPE
PInvoke.AdvApi32.TOKEN_TYPE.TokenPrimary = 1 -> PInvoke.AdvApi32.TOKEN_TYPE
PInvoke.AdvApi32.TokenAccessRights
const PInvoke.AdvApi32.SC_GROUP_IDENTIFIER = "+" -> string
const PInvoke.AdvApi32.SERVICE_NO_CHANGE = 4294967295 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_ALL_ACCESS = 983551 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_CHANGE_CONFIG = 2 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_ENUMERATE_DEPENDENTS = 8 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_INTERROGATE = 128 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_PAUSE_CONTINUE = 64 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_QUERY_CONFIG = 1 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_QUERY_STATUS = 4 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_START = 16 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_STOP = 32 -> uint
const PInvoke.AdvApi32.ServiceAccess.SERVICE_USER_DEFINED_CONTROL = 256 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_ALL_ACCESS = 983103 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_CONNECT = 1 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_CREATE_SERVICE = 2 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_ENUMERATE_SERVICE = 4 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_LOCK = 8 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_MODIFY_BOOT_CONFIG = 32 -> uint
const PInvoke.AdvApi32.ServiceManagerAccess.SC_MANAGER_QUERY_LOCK_STATUS = 16 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_ADJUST_DEFAULT = 128 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_ADJUST_GROUPS = 64 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_ADJUST_PRIVILEGES = 32 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_ADJUST_SESSIONID = 256 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_ALL_ACCESS = 983295 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_ASSIGN_PRIMARY = 1 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_DUPLICATE = 2 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_EXECUTE = 131076 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_IMPERSONATE = 4 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_QUERY = 8 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_QUERY_SOURCE = 16 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_READ = 131080 -> uint
const PInvoke.AdvApi32.TokenAccessRights.TOKEN_WRITE = 131296 -> uint
override PInvoke.AdvApi32.SafeCryptographicProviderHandle.IsInvalid.get -> bool
override PInvoke.AdvApi32.SafeCryptographicProviderHandle.ReleaseHandle() -> bool
override PInvoke.AdvApi32.SafeServiceHandle.IsInvalid.get -> bool
override PInvoke.AdvApi32.SafeServiceHandle.ReleaseHandle() -> bool
static PInvoke.AdvApi32.ChangeServiceConfig2(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.ServiceInfoLevel dwInfoLevel, System.IntPtr lpInfo) -> bool
static PInvoke.AdvApi32.CreateService(string lpBinaryPathName, string lpServiceName, string lpDisplayName, string lpDescription, string lpServiceStartName, string lpPassword) -> void
static PInvoke.AdvApi32.CryptGetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptGetProvParamQuery dwParam, System.IntPtr pbData, ref int pdwDataLen, uint dwFlags) -> bool
static PInvoke.AdvApi32.CryptGetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptGetProvParamQuery dwParam, ref byte? pbData, ref int pdwDataLen, uint dwFlags) -> bool
static PInvoke.AdvApi32.CryptGetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptGetProvParamQuery dwParam, uint dwFlags) -> byte[]
static PInvoke.AdvApi32.CryptSetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptSetProvParamQuery dwParam, System.IntPtr pbData, uint dwFlags) -> bool
static PInvoke.AdvApi32.CryptSetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptSetProvParamQuery dwParam, byte? pbData, uint dwFlags) -> bool
static PInvoke.AdvApi32.DeleteService(string lpServiceName) -> void
static PInvoke.AdvApi32.DuplicateTokenEx(PInvoke.Kernel32.SafeObjectHandle hExistingToken, PInvoke.Kernel32.ACCESS_MASK dwDesiredAccess, PInvoke.Kernel32.SECURITY_ATTRIBUTES? lpTokenAttributes, PInvoke.Kernel32.SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PInvoke.AdvApi32.TOKEN_TYPE TokenType, out PInvoke.Kernel32.SafeObjectHandle phNewToken) -> bool
static PInvoke.AdvApi32.DuplicateTokenEx(PInvoke.Kernel32.SafeObjectHandle hExistingToken, PInvoke.Kernel32.ACCESS_MASK dwDesiredAccess, System.IntPtr lpTokenAttributes, PInvoke.Kernel32.SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PInvoke.AdvApi32.TOKEN_TYPE TokenType, out PInvoke.Kernel32.SafeObjectHandle phNewToken) -> bool
static PInvoke.AdvApi32.EnumServicesStatus() -> System.Collections.Generic.IEnumerable<PInvoke.AdvApi32.ENUM_SERVICE_STATUS>
static PInvoke.AdvApi32.EnumServicesStatus(PInvoke.AdvApi32.SafeServiceHandle hSCManager, PInvoke.AdvApi32.ServiceType dwServiceType, PInvoke.AdvApi32.ServiceStateQuery dwServiceState, System.IntPtr lpServices, int cbBufSize, ref int pcbBytesNeeded, ref int lpServicesReturned, ref int lpResumeHandle) -> bool
static PInvoke.AdvApi32.EnumServicesStatus(PInvoke.AdvApi32.SafeServiceHandle hSCManager, PInvoke.AdvApi32.ServiceType dwServiceType, PInvoke.AdvApi32.ServiceStateQuery dwServiceState, byte[] lpServices, int cbBufSize, ref int pcbBytesNeeded, ref int lpServicesReturned, ref int lpResumeHandle) -> bool
static PInvoke.AdvApi32.GetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref System.IntPtr ppsidOwner, ref System.IntPtr ppsidGroup, System.IntPtr ppDacl, System.IntPtr ppSacl, System.IntPtr ppSecurityDescriptor) -> PInvoke.Win32ErrorCode
static PInvoke.AdvApi32.GetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref System.IntPtr ppsidOwner, ref System.IntPtr ppsidGroup, ref PInvoke.Kernel32.ACL? ppDacl, ref PInvoke.Kernel32.ACL? ppSacl, ref PInvoke.Kernel32.SECURITY_DESCRIPTOR? ppSecurityDescriptor) -> PInvoke.Win32ErrorCode
static PInvoke.AdvApi32.GetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref void* ppsidOwner, ref void* ppsidGroup, ref PInvoke.Kernel32.ACL? ppDacl, ref PInvoke.Kernel32.ACL? ppSacl, ref PInvoke.Kernel32.SECURITY_DESCRIPTOR? ppSecurityDescriptor) -> PInvoke.Win32ErrorCode
static PInvoke.AdvApi32.GetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref System.IntPtr ppsidOwner, ref System.IntPtr ppsidGroup, System.IntPtr ppDacl, System.IntPtr ppSacl, System.IntPtr ppSecurityDescriptor) -> uint
static PInvoke.AdvApi32.GetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref System.IntPtr ppsidOwner, ref System.IntPtr ppsidGroup, ref PInvoke.Kernel32.ACL? ppDacl, ref PInvoke.Kernel32.ACL? ppSacl, ref PInvoke.Kernel32.SECURITY_DESCRIPTOR? ppSecurityDescriptor) -> uint
static PInvoke.AdvApi32.GetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref void* ppsidOwner, ref void* ppsidGroup, ref PInvoke.Kernel32.ACL? ppDacl, ref PInvoke.Kernel32.ACL? ppSacl, ref PInvoke.Kernel32.SECURITY_DESCRIPTOR? ppSecurityDescriptor) -> uint
static PInvoke.AdvApi32.GetTokenElevationType(PInvoke.Kernel32.SafeObjectHandle TokenHandle) -> PInvoke.AdvApi32.TOKEN_ELEVATION_TYPE
static PInvoke.AdvApi32.GetTokenInformation(PInvoke.Kernel32.SafeObjectHandle TokenHandle, PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS TokenInformationClass, System.IntPtr TokenInformation, int TokenInformationLength, out int ReturnLength) -> bool
static PInvoke.AdvApi32.QueryServiceObjectSecurity(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.SECURITY_INFORMATION dwSecurityInformation) -> System.Security.AccessControl.RawSecurityDescriptor
static PInvoke.AdvApi32.QueryServiceStatusEx(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.SC_STATUS_TYPE InfoLevel, System.IntPtr lpBuffer, int cbBufSize, out int pcbBytesNeeded) -> bool
static PInvoke.AdvApi32.RegisterServiceCtrlHandlerEx(string lpServiceName, PInvoke.AdvApi32.LPHANDLER_FUNCTION_EX lpHandlerProc, System.IntPtr lpContext) -> System.IntPtr
static PInvoke.AdvApi32.SetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, System.IntPtr psidOwner, System.IntPtr psidGroup, System.IntPtr pDacl, System.IntPtr pSacl) -> uint
static PInvoke.AdvApi32.SetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, System.IntPtr psidOwner, System.IntPtr psidGroup, ref PInvoke.Kernel32.ACL? pDacl, ref PInvoke.Kernel32.ACL? pSacl) -> uint
static PInvoke.AdvApi32.SetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, void* psidOwner, void* psidGroup, ref PInvoke.Kernel32.ACL? pDacl, ref PInvoke.Kernel32.ACL? pSacl) -> uint
static PInvoke.AdvApi32.SetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, System.IntPtr psidOwner, System.IntPtr psidGroup, System.IntPtr pDacl, System.IntPtr pSacl) -> uint
static PInvoke.AdvApi32.SetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, System.IntPtr psidOwner, System.IntPtr psidGroup, ref PInvoke.Kernel32.ACL? pDacl, ref PInvoke.Kernel32.ACL? pSacl) -> uint
static PInvoke.AdvApi32.SetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, void* psidOwner, void* psidGroup, ref PInvoke.Kernel32.ACL? pDacl, ref PInvoke.Kernel32.ACL? pSacl) -> uint
static PInvoke.AdvApi32.SetServiceObjectSecurity(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.SECURITY_INFORMATION dwSecurityInformation, System.Security.AccessControl.RawSecurityDescriptor lpSecurityDescriptor) -> void
static extern PInvoke.AdvApi32.ChangeServiceConfig(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.ServiceType dwServiceType, PInvoke.AdvApi32.ServiceStartType dwStartType, PInvoke.AdvApi32.ServiceErrorControl dwErrorControl, string lpBinaryPathName, string lpLoadOrderGroup, int lpdwTagId, string lpDependencies, string lpServiceStartName, string lpPassword, string lpDisplayName) -> bool
static extern PInvoke.AdvApi32.ChangeServiceConfig2(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.ServiceInfoLevel dwInfoLevel, void* lpInfo) -> bool
static extern PInvoke.AdvApi32.ControlService(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.ServiceControl dwControl, ref PInvoke.AdvApi32.SERVICE_STATUS lpServiceStatus) -> bool
static extern PInvoke.AdvApi32.CreateService(PInvoke.AdvApi32.SafeServiceHandle hSCManager, string lpServiceName, string lpDisplayName, PInvoke.Kernel32.ACCESS_MASK dwDesiredAccess, PInvoke.AdvApi32.ServiceType dwServiceType, PInvoke.AdvApi32.ServiceStartType dwStartType, PInvoke.AdvApi32.ServiceErrorControl dwErrorControl, string lpBinaryPathName, string lpLoadOrderGroup, int lpdwTagId, string lpDependencies, string lpServiceStartName, string lpPassword) -> PInvoke.AdvApi32.SafeServiceHandle
static extern PInvoke.AdvApi32.CryptGetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptGetProvParamQuery dwParam, byte* pbData, ref int pdwDataLen, uint dwFlags) -> bool
static extern PInvoke.AdvApi32.CryptSetProvParam(System.Runtime.InteropServices.SafeHandle hProv, PInvoke.AdvApi32.CryptSetProvParamQuery dwParam, byte* pbData, uint dwFlags) -> bool
static extern PInvoke.AdvApi32.DeleteService(PInvoke.AdvApi32.SafeServiceHandle hService) -> bool
static extern PInvoke.AdvApi32.DuplicateTokenEx(PInvoke.Kernel32.SafeObjectHandle hExistingToken, PInvoke.Kernel32.ACCESS_MASK dwDesiredAccess, PInvoke.Kernel32.SECURITY_ATTRIBUTES* lpTokenAttributes, PInvoke.Kernel32.SECURITY_IMPERSONATION_LEVEL ImpersonationLevel, PInvoke.AdvApi32.TOKEN_TYPE TokenType, out PInvoke.Kernel32.SafeObjectHandle phNewToken) -> bool
static extern PInvoke.AdvApi32.EnumServicesStatus(PInvoke.AdvApi32.SafeServiceHandle hSCManager, PInvoke.AdvApi32.ServiceType dwServiceType, PInvoke.AdvApi32.ServiceStateQuery dwServiceState, byte* lpServices, int cbBufSize, ref int pcbBytesNeeded, ref int lpServicesReturned, ref int lpResumeHandle) -> bool
static extern PInvoke.AdvApi32.GetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref void* ppsidOwner, ref void* ppsidGroup, PInvoke.Kernel32.ACL* ppDacl, PInvoke.Kernel32.ACL* ppSacl, PInvoke.Kernel32.SECURITY_DESCRIPTOR* ppSecurityDescriptor) -> PInvoke.Win32ErrorCode
static extern PInvoke.AdvApi32.GetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, ref void* ppsidOwner, ref void* ppsidGroup, PInvoke.Kernel32.ACL* ppDacl, PInvoke.Kernel32.ACL* ppSacl, PInvoke.Kernel32.SECURITY_DESCRIPTOR* ppSecurityDescriptor) -> uint
static extern PInvoke.AdvApi32.GetTokenInformation(PInvoke.Kernel32.SafeObjectHandle TokenHandle, PInvoke.AdvApi32.TOKEN_INFORMATION_CLASS TokenInformationClass, void* TokenInformation, int TokenInformationLength, out int ReturnLength) -> bool
static extern PInvoke.AdvApi32.LsaNtStatusToWinError(PInvoke.NTSTATUS Status) -> PInvoke.Win32ErrorCode
static extern PInvoke.AdvApi32.OpenProcessToken(System.IntPtr processHandle, PInvoke.Kernel32.ACCESS_MASK desiredAccess, out PInvoke.Kernel32.SafeObjectHandle tokenHandle) -> bool
static extern PInvoke.AdvApi32.OpenSCManager(string lpMachineName, string lpDatabaseName, PInvoke.Kernel32.ACCESS_MASK dwDesiredAccess) -> PInvoke.AdvApi32.SafeServiceHandle
static extern PInvoke.AdvApi32.OpenService(PInvoke.AdvApi32.SafeServiceHandle hSCManager, string lpServiceName, PInvoke.Kernel32.ACCESS_MASK dwDesiredAccess) -> PInvoke.AdvApi32.SafeServiceHandle
static extern PInvoke.AdvApi32.QueryServiceObjectSecurity(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.SECURITY_INFORMATION dwSecurityInformation, byte[] lpSecurityDescriptor, int cbBufSize, out int pcbBytesNeeded) -> bool
static extern PInvoke.AdvApi32.QueryServiceStatus(PInvoke.AdvApi32.SafeServiceHandle hService, ref PInvoke.AdvApi32.SERVICE_STATUS dwServiceStatus) -> bool
static extern PInvoke.AdvApi32.QueryServiceStatusEx(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.SC_STATUS_TYPE InfoLevel, void* lpBuffer, int cbBufSize, out int pcbBytesNeeded) -> bool
static extern PInvoke.AdvApi32.RegFlushKey(Microsoft.Win32.SafeHandles.SafeRegistryHandle hKey) -> PInvoke.Win32ErrorCode
static extern PInvoke.AdvApi32.RegNotifyChangeKeyValue(Microsoft.Win32.SafeHandles.SafeRegistryHandle hKey, bool bWatchSubtree, PInvoke.AdvApi32.RegNotifyFilter dwNotifyFilter, Microsoft.Win32.SafeHandles.SafeWaitHandle hEvent, bool fAsynchronous) -> PInvoke.Win32ErrorCode
static extern PInvoke.AdvApi32.RegOpenKeyEx(Microsoft.Win32.SafeHandles.SafeRegistryHandle hKey, string lpSubKey, PInvoke.AdvApi32.RegOpenKeyOptions ulOptions, PInvoke.Kernel32.ACCESS_MASK samDesired, out Microsoft.Win32.SafeHandles.SafeRegistryHandle phkResult) -> PInvoke.Win32ErrorCode
static extern PInvoke.AdvApi32.RegisterServiceCtrlHandler(string lpServiceName, PInvoke.AdvApi32.LPHANDLER_FUNCTION lpHandlerProc) -> System.IntPtr
static extern PInvoke.AdvApi32.RegisterServiceCtrlHandlerEx(string lpServiceName, PInvoke.AdvApi32.LPHANDLER_FUNCTION_EX lpHandlerProc, void* lpContext) -> System.IntPtr
static extern PInvoke.AdvApi32.SetNamedSecurityInfo(string pObjectName, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, void* psidOwner, void* psidGroup, PInvoke.Kernel32.ACL* pDacl, PInvoke.Kernel32.ACL* pSacl) -> uint
static extern PInvoke.AdvApi32.SetSecurityInfo(System.IntPtr handle, PInvoke.AdvApi32.SE_OBJECT_TYPE ObjectType, PInvoke.AdvApi32.SECURITY_INFORMATION SecurityInfo, void* psidOwner, void* psidGroup, PInvoke.Kernel32.ACL* pDacl, PInvoke.Kernel32.ACL* pSacl) -> uint
static extern PInvoke.AdvApi32.SetServiceObjectSecurity(PInvoke.AdvApi32.SafeServiceHandle hService, PInvoke.AdvApi32.SECURITY_INFORMATION dwSecurityInformation, byte[] lpSecurityDescriptor) -> bool
static extern PInvoke.AdvApi32.SetServiceStatus(System.IntPtr hServiceStatus, ref PInvoke.AdvApi32.SERVICE_STATUS lpServiceStatus) -> bool
static extern PInvoke.AdvApi32.StartService(PInvoke.AdvApi32.SafeServiceHandle hService, int dwNumServiceArgs, string lpServiceArgVectors) -> bool
static readonly PInvoke.AdvApi32.HKEY_CLASSES_ROOT -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_CURRENT_CONFIG -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_CURRENT_USER -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_CURRENT_USER_LOCAL_SETTINGS -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_DYN_DATA -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_LOCAL_MACHINE -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_PERFORMANCE_DATA -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_PERFORMANCE_NLSTEXT -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_PERFORMANCE_TEXT -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.HKEY_USERS -> Microsoft.Win32.SafeHandles.SafeRegistryHandle
static readonly PInvoke.AdvApi32.KEY_ALL_ACCESS -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_CREATE_LINK -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_CREATE_SUB_KEY -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_ENUMERATE_SUB_KEYS -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_EXECUTE -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_NOTIFY -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_QUERY_VALUE -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_READ -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_SET_VALUE -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_WOW64_32KEY -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_WOW64_64KEY -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.KEY_WRITE -> PInvoke.Kernel32.ACCESS_MASK
static readonly PInvoke.AdvApi32.SafeCryptographicProviderHandle.Null -> PInvoke.AdvApi32.SafeCryptographicProviderHandle
static readonly PInvoke.AdvApi32.SafeServiceHandle.Null -> PInvoke.AdvApi32.SafeServiceHandle
PInvoke.AdvApi32.ServiceErrorControl.SERVICE_NO_CHANGE = 4294967295 -> PInvoke.AdvApi32.ServiceErrorControl
PInvoke.AdvApi32.ServiceStartType.SERVICE_NO_CHANGE = 4294967295 -> PInvoke.AdvApi32.ServiceStartType
PInvoke.AdvApi32.ServiceType.SERVICE_NO_CHANGE = 4294967295 -> PInvoke.AdvApi32.ServiceType
PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_3DES = 26115 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_3DES_112 = 26121 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_AES = 26129 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_AES_128 = 26126 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_AES_192 = 26127 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_AES_256 = 26128 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_AGREEDKEY_ANY = 43523 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_CYLINK_MEK = 26124 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_DES = 26113 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_DESX = 26116 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_DH_EPHEM = 43522 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_DH_SF = 43521 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_DSS_SIGN = 8704 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_ECDH = 43525 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_ECDH_EPHEM = 44550 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_ECDSA = 8707 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_ECMQV = 40961 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_HASH_REPLACE_OWF = 32779 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_HMAC = 32777 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_HUGHES_MD5 = 40963 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_KEA_KEYX = 43524 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_MAC = 32773 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_MD2 = 32769 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_MD4 = 32770 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_MD5 = 32771 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_NO_SIGN = 8192 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_NULLCIPHER = 24576 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_PCT1_MASTER = 19460 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_RC2 = 26114 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_RC4 = 26625 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_RC5 = 26125 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_RSA_KEYX = 41984 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_RSA_SIGN = 9216 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SCHANNEL_ENC_KEY = 19463 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SCHANNEL_MAC_KEY = 19459 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SCHANNEL_MASTER_HASH = 19458 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SEAL = 26626 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SHA = 32772 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SHA1 = 32772 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SHA_256 = 32780 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SHA_384 = 32781 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SHA_512 = 32782 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SKIPJACK = 26122 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SSL2_MASTER = 19461 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SSL3_MASTER = 19457 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_SSL3_SHAMD5 = 32776 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_TEK = 26123 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_THIRDPARTY_CIPHER = 28672 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_THIRDPARTY_HASH = 36864 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_THIRDPARTY_KEY_EXCHANGE = 45056 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_THIRDPARTY_SIGNATURE = 12288 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_TLS1PRF = 32778 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.ALG_ID.CALG_TLS1_MASTER = 19462 -> PInvoke.AdvApi32.ALG_ID
PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.CRYPT_DEFAULT_CONTAINER_OPTIONAL = 128 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.CRYPT_DELETEKEYSET = 16 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.CRYPT_MACHINE_KEYSET = 32 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.CRYPT_NEWKEYSET = 8 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.CRYPT_SILENT = 64 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.CRYPT_VERIFYCONTEXT = 4026531840 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptAcquireContextFlags.None = 0 -> PInvoke.AdvApi32.CryptAcquireContextFlags
PInvoke.AdvApi32.CryptCreateHashFlags
PInvoke.AdvApi32.CryptCreateHashFlags.CRYPT_SECRETDIGEST = 1 -> PInvoke.AdvApi32.CryptCreateHashFlags
PInvoke.AdvApi32.CryptCreateHashFlags.None = 0 -> PInvoke.AdvApi32.CryptCreateHashFlags
PInvoke.AdvApi32.CryptGetHashParamFlags
PInvoke.AdvApi32.CryptGetHashParamFlags.HP_ALGID = 1 -> PInvoke.AdvApi32.CryptGetHashParamFlags
PInvoke.AdvApi32.CryptGetHashParamFlags.HP_HASHSIZE = 4 -> PInvoke.AdvApi32.CryptGetHashParamFlags
PInvoke.AdvApi32.CryptGetHashParamFlags.HP_HASHVAL = 2 -> PInvoke.AdvApi32.CryptGetHashParamFlags
PInvoke.AdvApi32.CryptHashDataFlags
PInvoke.AdvApi32.CryptHashDataFlags.CRYPT_OWF_REPL_LM_HASH = 1 -> PInvoke.AdvApi32.CryptHashDataFlags
PInvoke.AdvApi32.CryptHashDataFlags.CRYPT_USERDATA = 1 -> PInvoke.AdvApi32.CryptHashDataFlags
PInvoke.AdvApi32.CryptHashDataFlags.None = 0 -> PInvoke.AdvApi32.CryptHashDataFlags
PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_DH_SCHANNEL = 18 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_DSS = 3 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_DSS_DH = 13 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_EC_ECDSA_FULL = 16 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_EC_ECDSA_SIG = 14 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_EC_ECNRA_FULL = 17 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_EC_ECNRA_SIG = 15 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_FORTEZZA = 4 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_INTEL_SEC = 22 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_MS_EXCHANGE = 5 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_REPLACE_OWF = 23 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_RNG = 21 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_RSA_AES = 24 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_RSA_FULL = 1 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_RSA_SCHANNEL = 12 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_RSA_SIG = 2 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_SPYRUS_LYNKS = 20 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.ProviderType.PROV_SSL = 6 -> PInvoke.AdvApi32.ProviderType
PInvoke.AdvApi32.SC_ACTION_TYPE.SC_ACTION_OWN_RESTART = 4 -> PInvoke.AdvApi32.SC_ACTION_TYPE
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpCommand_IntPtr.get -> System.IntPtr
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpCommand_IntPtr.set -> void
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpRebootMsg_IntPtr.get -> System.IntPtr
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpRebootMsg_IntPtr.set -> void
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpsaActions_IntPtr.get -> System.IntPtr
PInvoke.AdvApi32.SERVICE_FAILURE_ACTIONS.lpsaActions_IntPtr.set -> void
PInvoke.AdvApi32.SafeHashHandle
PInvoke.AdvApi32.SafeHashHandle.SafeHashHandle() -> void
PInvoke.AdvApi32.SafeHashHandle.SafeHashHandle(System.IntPtr preexistingHandle, bool ownsHandle = true) -> void
override PInvoke.AdvApi32.SafeHashHandle.IsInvalid.get -> bool
override PInvoke.AdvApi32.SafeHashHandle.ReleaseHandle() -> bool
static PInvoke.AdvApi32.CryptGetHashParam(PInvoke.AdvApi32.SafeHashHandle hHash, PInvoke.AdvApi32.CryptGetHashParamFlags dwParam, System.IntPtr pbData, System.IntPtr pdwDataLen, uint dwFlags) -> bool
static PInvoke.AdvApi32.CryptGetHashParam(PInvoke.AdvApi32.SafeHashHandle hHash, PInvoke.AdvApi32.CryptGetHashParamFlags dwParam, byte[] pbData, ref int pdwDataLen, uint dwFlags) -> bool
static PInvoke.AdvApi32.CryptHashData(PInvoke.AdvApi32.SafeHashHandle hHash, System.IntPtr pbData, int dataLen, PInvoke.AdvApi32.CryptHashDataFlags flags) -> bool
static PInvoke.AdvApi32.CryptHashData(PInvoke.AdvApi32.SafeHashHandle hHash, byte[] pbData, int dataLen, PInvoke.AdvApi32.CryptHashDataFlags flags) -> bool
static extern PInvoke.AdvApi32.CryptAcquireContext(out PInvoke.AdvApi32.SafeCryptographicProviderHandle hProv, string pszContainer, string pszProvider, PInvoke.AdvApi32.ProviderType dwProvType, PInvoke.AdvApi32.CryptAcquireContextFlags dwFlags) -> bool
static extern PInvoke.AdvApi32.CryptCreateHash(PInvoke.AdvApi32.SafeCryptographicProviderHandle hProv, PInvoke.AdvApi32.ALG_ID algId, PInvoke.AdvApi32.SafeHashHandle hKey, PInvoke.AdvApi32.CryptCreateHashFlags dwFlags, out PInvoke.AdvApi32.SafeHashHandle phHash) -> bool
static extern PInvoke.AdvApi32.CryptGetHashParam(PInvoke.AdvApi32.SafeHashHandle hHash, PInvoke.AdvApi32.CryptGetHashParamFlags dwParam, byte* pbData, int* pdwDataLen, uint dwFlags) -> bool
static extern PInvoke.AdvApi32.CryptHashData(PInvoke.AdvApi32.SafeHashHandle hHash, byte* pbData, int dataLen, PInvoke.AdvApi32.CryptHashDataFlags flags) -> bool
static readonly PInvoke.AdvApi32.SafeHashHandle.Null -> PInvoke.AdvApi32.SafeHashHandle
